version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    networks:
      - default

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  app:
    image: ruby:3.2.1
    container_name: ruby_app
    build:
      context: .
      dockerfile: Dockerfile
    command: ["sh", "-c", "sleep 10 && bundle exec rails server -b 0.0.0.0 -p 3001"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "3001:3001"
    networks:
      - default

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sidekiq
    command: ["sh", "-c", "sleep 10 && bundle exec sidekiq"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - default

networks:
  default:
    driver: bridge
